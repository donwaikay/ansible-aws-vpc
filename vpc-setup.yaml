- hosts: localhost
  connection: local
  gather_facts: False
  tasks: 
    - name: Import VPC Variables
      include_vars: vars/vpc_setup

    - name: Create Olayinka VPC
      ec2_vpc_net: 
        name: "{{vpc_name}}"
        cidr_block: "{{vpcCidr}}"
        region: "{{region}}"
        dns_support: yes
        dns_hostnames: yes
        tenancy: default
        state: "{{state}}"
      register: vpcout

    - debug: 
        var: vpcout

    - name: create a Public Subnet in Zone1
      ec2_vpc_subnet: 
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        az: "{{zone1}}"
        state: "{{state}}"
        cidr: "{{pubSub1Cidr}}"
        map_public: yes
        resource_tags: 
          Name: Olayinka-pubsub1 
      register: pubSub1_out 

    - name: create a Public Subnet in Zone2
      ec2_vpc_subnet: 
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        az: "{{zone2}}"
        state: "{{state}}"
        cidr: "{{pubSub2Cidr}}"
        map_public: yes
        resource_tags: 
          Name: Olayinka-pubsub2 
      register: pubSub2_out 

    - name: create a Public Subnet in Zone3
      ec2_vpc_subnet: 
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        az: "{{zone3}}"
        state: "{{state}}"
        cidr: "{{pubSub3Cidr}}"
        map_public: yes
        resource_tags: 
          Name: Olayinka-pubsub3 
      register: pubSub3_out

    - name: create a Private Subnet in Zone1
      ec2_vpc_subnet: 
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        az: "{{zone1}}"
        state: "{{state}}"
        cidr: "{{privSub1Cidr}}"
        map_public: yes
        resource_tags: 
          Name: Olayinka-privsub1 
      register: privSub1_out

    - name: create a Private Subnet in Zone2
      ec2_vpc_subnet: 
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        az: "{{zone2}}"
        state: "{{state}}"
        cidr: "{{privSub2Cidr}}"
        map_public: yes
        resource_tags: 
          Name: Olayinka-privsub2 
      register: privSub2_out

    - name: create a Private Subnet in Zone3
      ec2_vpc_subnet: 
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        az: "{{zone3}}"
        state: "{{state}}"
        cidr: "{{privSub3Cidr}}"
        map_public: yes
        resource_tags: 
          Name: Olayinka-privsub3 
      register: privSub3_out

    - name: Internet Gateway vars/vpc_setup
      ec2_vpc_igw: 
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        state: "{{state}}"
        resource_tags:
          Name: Olayinka-IGW
      register: igw_out

    - name: Set up public subnet route table
      ec2_vpc_route_table: 
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        tags:
          Name: Vprofile-pubRT
        subnets:
          - "{{pubSub1_out.subnet.id}}"
          - "{{pubSub2_out.subnet.id}}"
          - "{{pubSub3_out.subnet.id}}"
        routes: 
         - dest: 0.0.0.0/0
           gateway_id: "{{igw_out.gateway_id}}"
      register: pubRT_out

    - name: Create new nat gateway and allocate new EIP 
      ec2_vpc_nat_gateway: 
        state: "{{state}}"
        subnet_id: "{{pubsub1_out.subnet.id}}"
        wait: yes 
        region: "{{region}}"
        if_exist_do_not_create: true
      register: NATGW_out

    - name: Set up private subnet route table
      ec2_vpc_route_table: 
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        tags:
          Name: Vprofile-privRT
        subnets:
          - "{{privSub1_out.subnet.id}}"
          - "{{privSub2_out.subnet.id}}"
          - "{{privSub3_out.subnet.id}}"
        routes: 
         - dest: 0.0.0.0/0
           gateway_id: "{{igw_out.gateway_id}}"
      register: privRT_out
